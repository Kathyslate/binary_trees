oinclude <stdlib.h>
#include estdlib.s a pointer to the root node of the tree to check
If tree is NULL, your function must return 0h>
#include <stdio.h>
#include "binary_trees.h"

#define NULL 0


int binary_tree_is_full(const binary_tree_t *tree)
{
  if (!tree)
    return 0;

  int height = binary_tree_height(tree);

  return binary_tree_is_full_helper(tree, 1) &&
         ((1 << height) - 1) == ((1 << (binary_tree_height(tree->left))) - 1) +
#include <stdio.h>
#include "binary_trees.h"

#define NULL 0


int binary_tree_is_full(const binary_tree_t *tree)
{
  if (!tree)
    return 0;

  int height = binary_tree_height(tree);

  return binary_tree_is_full_helper(tree, 1) &&
         ((1 << height) - 1) == ((1 << (binary_tree_height(tree->left))) - 1) +

